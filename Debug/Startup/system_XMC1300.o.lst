   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,2
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "system_XMC1300.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.SystemCoreSetup,"ax",%progbits
  18              	 .align 2
  19              	 .weak SystemCoreSetup
  20              	 .code 16
  21              	 .thumb_func
  23              	SystemCoreSetup:
  24              	.LFB35:
  25              	 .file 1 "../Startup/system_XMC1300.c"
   1:../Startup/system_XMC1300.c **** /**************************************************************************************************
   2:../Startup/system_XMC1300.c ****  * @file     system_XMC1300.c
   3:../Startup/system_XMC1300.c ****  * @brief    Device specific initialization for the XMC1300-Series according to CMSIS
   4:../Startup/system_XMC1300.c ****  * @version  V1.8
   5:../Startup/system_XMC1300.c ****  * @date     03 Sep 2015
   6:../Startup/system_XMC1300.c ****  *
   7:../Startup/system_XMC1300.c ****  * @cond
   8:../Startup/system_XMC1300.c ****  **************************************************************************************************
   9:../Startup/system_XMC1300.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Startup/system_XMC1300.c ****  * All rights reserved.                        
  11:../Startup/system_XMC1300.c ****  *                                             
  12:../Startup/system_XMC1300.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Startup/system_XMC1300.c ****  * following conditions are met:   
  14:../Startup/system_XMC1300.c ****  *                                                                              
  15:../Startup/system_XMC1300.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Startup/system_XMC1300.c ****  * disclaimer.                        
  17:../Startup/system_XMC1300.c ****  * 
  18:../Startup/system_XMC1300.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Startup/system_XMC1300.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Startup/system_XMC1300.c ****  * 
  21:../Startup/system_XMC1300.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Startup/system_XMC1300.c ****  * products derived from this software without specific prior written permission.                  
  23:../Startup/system_XMC1300.c ****  *                                                                              
  24:../Startup/system_XMC1300.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Startup/system_XMC1300.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Startup/system_XMC1300.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Startup/system_XMC1300.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Startup/system_XMC1300.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Startup/system_XMC1300.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Startup/system_XMC1300.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Startup/system_XMC1300.c ****  *                                                                              
  32:../Startup/system_XMC1300.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Startup/system_XMC1300.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Startup/system_XMC1300.c ****  **************************************************************************************************
  35:../Startup/system_XMC1300.c ****  *
  36:../Startup/system_XMC1300.c ****  * *************************** Change history ********************************
  37:../Startup/system_XMC1300.c ****  * V1.2, 13 Dec 2012, PKB : Created change history table
  38:../Startup/system_XMC1300.c ****  * V1.3, 20 Dec 2012, PKB : Fixed SystemCoreClock computation
  39:../Startup/system_XMC1300.c ****  * V1.4, 02 Feb 2013, PKB : SCU_CLOCK -> SCU_CLK
  40:../Startup/system_XMC1300.c ****  * V1.5, 27 Nov 2013, DNE : Comments added in SystemInit function for MCLK support
  41:../Startup/system_XMC1300.c ****  * V1.6, 19 Feb 2014, JFT : Fixed SystemCoreClock when FDIV != 0 
  42:../Startup/system_XMC1300.c ****  * V1.7, 11 Dec 2014, JFT : SystemCoreClockSetup, SystemCoreSetup as weak functions
  43:../Startup/system_XMC1300.c ****  * V1.8, 03 Sep 2015, JFT : Override values of CLOCK_VAL1 and CLOCK_VAL2 defined in vector table (s
  44:../Startup/system_XMC1300.c ****  *                          MCLK = 32MHz, PCLK = 64MHz
  45:../Startup/system_XMC1300.c ****  *
  46:../Startup/system_XMC1300.c ****  * @endcond 
  47:../Startup/system_XMC1300.c ****  */
  48:../Startup/system_XMC1300.c **** 
  49:../Startup/system_XMC1300.c **** /*******************************************************************************
  50:../Startup/system_XMC1300.c ****  * HEADER FILES
  51:../Startup/system_XMC1300.c ****  *******************************************************************************/
  52:../Startup/system_XMC1300.c **** 
  53:../Startup/system_XMC1300.c **** #include <XMC1300.h>
  54:../Startup/system_XMC1300.c **** #include "system_XMC1300.h"
  55:../Startup/system_XMC1300.c **** 
  56:../Startup/system_XMC1300.c **** /*******************************************************************************
  57:../Startup/system_XMC1300.c ****  * MACROS
  58:../Startup/system_XMC1300.c ****  *******************************************************************************/
  59:../Startup/system_XMC1300.c **** 
  60:../Startup/system_XMC1300.c **** /* Define WEAK attribute */
  61:../Startup/system_XMC1300.c **** #if !defined(__WEAK)
  62:../Startup/system_XMC1300.c **** #if defined ( __CC_ARM )
  63:../Startup/system_XMC1300.c **** #define __WEAK __attribute__ ((weak))
  64:../Startup/system_XMC1300.c **** #elif defined ( __ICCARM__ )
  65:../Startup/system_XMC1300.c **** #define __WEAK __weak
  66:../Startup/system_XMC1300.c **** #elif defined ( __GNUC__ )
  67:../Startup/system_XMC1300.c **** #define __WEAK __attribute__ ((weak))
  68:../Startup/system_XMC1300.c **** #elif defined ( __TASKING__ )
  69:../Startup/system_XMC1300.c **** #define __WEAK __attribute__ ((weak))
  70:../Startup/system_XMC1300.c **** #endif
  71:../Startup/system_XMC1300.c **** #endif
  72:../Startup/system_XMC1300.c **** 
  73:../Startup/system_XMC1300.c **** #define DCO1_FREQUENCY (64000000U)
  74:../Startup/system_XMC1300.c **** 
  75:../Startup/system_XMC1300.c **** /*******************************************************************************
  76:../Startup/system_XMC1300.c ****  * GLOBAL VARIABLES
  77:../Startup/system_XMC1300.c ****  *******************************************************************************/
  78:../Startup/system_XMC1300.c **** 
  79:../Startup/system_XMC1300.c **** #if defined ( __CC_ARM )
  80:../Startup/system_XMC1300.c **** uint32_t SystemCoreClock __attribute__((at(0x20003FFC)));
  81:../Startup/system_XMC1300.c **** #elif defined ( __ICCARM__ )
  82:../Startup/system_XMC1300.c **** __no_init uint32_t SystemCoreClock;
  83:../Startup/system_XMC1300.c **** #elif defined ( __GNUC__ )
  84:../Startup/system_XMC1300.c **** uint32_t SystemCoreClock __attribute__((section(".no_init")));
  85:../Startup/system_XMC1300.c **** #elif defined ( __TASKING__ )
  86:../Startup/system_XMC1300.c **** uint32_t SystemCoreClock __at( 0x20003FFC );
  87:../Startup/system_XMC1300.c **** #endif
  88:../Startup/system_XMC1300.c **** 
  89:../Startup/system_XMC1300.c **** /*******************************************************************************
  90:../Startup/system_XMC1300.c ****  * API IMPLEMENTATION
  91:../Startup/system_XMC1300.c ****  *******************************************************************************/
  92:../Startup/system_XMC1300.c **** 
  93:../Startup/system_XMC1300.c **** __WEAK void SystemInit(void)
  94:../Startup/system_XMC1300.c **** {    
  95:../Startup/system_XMC1300.c ****   SystemCoreSetup();
  96:../Startup/system_XMC1300.c ****   SystemCoreClockSetup();
  97:../Startup/system_XMC1300.c **** }
  98:../Startup/system_XMC1300.c **** 
  99:../Startup/system_XMC1300.c **** __WEAK void SystemCoreSetup(void)
 100:../Startup/system_XMC1300.c **** {
  26              	 .loc 1 100 0
  27              	 .cfi_startproc
 101:../Startup/system_XMC1300.c **** }
  28              	 .loc 1 101 0
  29              	 
  30 0000 7047     	 bx lr
  31              	 .cfi_endproc
  32              	.LFE35:
  34              	 .global __aeabi_uidiv
  35 0002 C046     	 .section .text.SystemCoreClockUpdate,"ax",%progbits
  36              	 .align 2
  37              	 .weak SystemCoreClockUpdate
  38              	 .code 16
  39              	 .thumb_func
  41              	SystemCoreClockUpdate:
  42              	.LFB37:
 102:../Startup/system_XMC1300.c **** 
 103:../Startup/system_XMC1300.c **** __WEAK void SystemCoreClockSetup(void)
 104:../Startup/system_XMC1300.c **** {
 105:../Startup/system_XMC1300.c ****   /* Override values of CLOCK_VAL1 and CLOCK_VAL2 defined in vector table */
 106:../Startup/system_XMC1300.c ****   /* MCLK = 32MHz, PCLK = 64MHz */
 107:../Startup/system_XMC1300.c ****   
 108:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C0UL; /* disable bit protection */
 109:../Startup/system_XMC1300.c ****   SCU_CLK->CLKCR = 0x3FF10100UL;
 110:../Startup/system_XMC1300.c ****   while((SCU_CLK->CLKCR & SCU_CLK_CLKCR_VDDC2LOW_Msk));
 111:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C3UL; /* enable bit protection */
 112:../Startup/system_XMC1300.c **** 
 113:../Startup/system_XMC1300.c ****   SystemCoreClockUpdate();
 114:../Startup/system_XMC1300.c **** }
 115:../Startup/system_XMC1300.c **** 
 116:../Startup/system_XMC1300.c **** __WEAK void SystemCoreClockUpdate(void)
 117:../Startup/system_XMC1300.c **** {
  43              	 .loc 1 117 0
  44              	 .cfi_startproc
 118:../Startup/system_XMC1300.c ****   static uint32_t IDIV, FDIV;
 119:../Startup/system_XMC1300.c **** 
 120:../Startup/system_XMC1300.c ****   IDIV = ((SCU_CLK->CLKCR) & SCU_CLK_CLKCR_IDIV_Msk) >> SCU_CLK_CLKCR_IDIV_Pos;
  45              	 .loc 1 120 0
  46 0000 0C4A     	 ldr r2,.L7
 117:../Startup/system_XMC1300.c ****   static uint32_t IDIV, FDIV;
  47              	 .loc 1 117 0
  48 0002 08B5     	 push {r3,lr}
  49              	 .cfi_def_cfa_offset 8
  50              	 .cfi_offset 3,-8
  51              	 .cfi_offset 14,-4
  52              	 .loc 1 120 0
  53 0004 1368     	 ldr r3,[r2]
  54 0006 0C49     	 ldr r1,.L7+4
  55 0008 1B04     	 lsl r3,r3,#16
  56 000a 1B0E     	 lsr r3,r3,#24
  57 000c 0B60     	 str r3,[r1]
 121:../Startup/system_XMC1300.c ****   FDIV = ((SCU_CLK->CLKCR) & SCU_CLK_CLKCR_FDIV_Msk) >> SCU_CLK_CLKCR_FDIV_Pos;
  58              	 .loc 1 121 0
  59 000e FF21     	 mov r1,#255
  60 0010 1268     	 ldr r2,[r2]
  61 0012 1140     	 and r1,r2
  62 0014 094A     	 ldr r2,.L7+8
  63 0016 1160     	 str r1,[r2]
 122:../Startup/system_XMC1300.c ****   
 123:../Startup/system_XMC1300.c ****   if (IDIV != 0)
  64              	 .loc 1 123 0
  65 0018 002B     	 cmp r3,#0
  66 001a 03D1     	 bne .L6
 124:../Startup/system_XMC1300.c ****   {
 125:../Startup/system_XMC1300.c ****     /* Fractional divider is enabled and used */
 126:../Startup/system_XMC1300.c ****     SystemCoreClock = ((DCO1_FREQUENCY << 6U) / ((IDIV << 8) + FDIV)) << 1U;
 127:../Startup/system_XMC1300.c ****   }
 128:../Startup/system_XMC1300.c ****   else
 129:../Startup/system_XMC1300.c ****   {
 130:../Startup/system_XMC1300.c ****     /* Fractional divider bypassed. Simply divide DCO_DCLK by 2 */
 131:../Startup/system_XMC1300.c ****     SystemCoreClock = DCO1_FREQUENCY >> 1U;
  67              	 .loc 1 131 0
  68 001c 0848     	 ldr r0,.L7+12
  69              	.L3:
  70 001e 094B     	 ldr r3,.L7+16
 132:../Startup/system_XMC1300.c ****   }
 133:../Startup/system_XMC1300.c **** }
  71              	 .loc 1 133 0
  72              	 
  73 0020 1860     	 str r0,[r3]
  74 0022 08BD     	 pop {r3,pc}
  75              	.L6:
 126:../Startup/system_XMC1300.c ****   }
  76              	 .loc 1 126 0
  77 0024 1B02     	 lsl r3,r3,#8
  78 0026 5918     	 add r1,r3,r1
  79 0028 0748     	 ldr r0,.L7+20
  80 002a FFF7FEFF 	 bl __aeabi_uidiv
  81              	.LVL0:
  82 002e 4000     	 lsl r0,r0,#1
  83 0030 F5E7     	 b .L3
  84              	.L8:
  85 0032 C046     	 .align 2
  86              	.L7:
  87 0034 00030140 	 .word 1073808128
  88 0038 00000000 	 .word .LANCHOR0
  89 003c 00000000 	 .word .LANCHOR1
  90 0040 0048E801 	 .word 32000000
  91 0044 00000000 	 .word .LANCHOR2
  92 0048 000024F4 	 .word -198967296
  93              	 .cfi_endproc
  94              	.LFE37:
  96              	 .section .text.SystemCoreClockSetup,"ax",%progbits
  97              	 .align 2
  98              	 .weak SystemCoreClockSetup
  99              	 .code 16
 100              	 .thumb_func
 102              	SystemCoreClockSetup:
 103              	.LFB36:
 104:../Startup/system_XMC1300.c ****   /* Override values of CLOCK_VAL1 and CLOCK_VAL2 defined in vector table */
 104              	 .loc 1 104 0
 105              	 .cfi_startproc
 108:../Startup/system_XMC1300.c ****   SCU_CLK->CLKCR = 0x3FF10100UL;
 106              	 .loc 1 108 0
 107 0000 C022     	 mov r2,#192
 110:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C3UL; /* enable bit protection */
 108              	 .loc 1 110 0
 109 0002 8021     	 mov r1,#128
 104:../Startup/system_XMC1300.c ****   /* Override values of CLOCK_VAL1 and CLOCK_VAL2 defined in vector table */
 110              	 .loc 1 104 0
 111 0004 08B5     	 push {r3,lr}
 112              	 .cfi_def_cfa_offset 8
 113              	 .cfi_offset 3,-8
 114              	 .cfi_offset 14,-4
 108:../Startup/system_XMC1300.c ****   SCU_CLK->CLKCR = 0x3FF10100UL;
 115              	 .loc 1 108 0
 116 0006 074B     	 ldr r3,.L12
 110:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C3UL; /* enable bit protection */
 117              	 .loc 1 110 0
 118 0008 C905     	 lsl r1,r1,#23
 108:../Startup/system_XMC1300.c ****   SCU_CLK->CLKCR = 0x3FF10100UL;
 119              	 .loc 1 108 0
 120 000a 5A62     	 str r2,[r3,#36]
 109:../Startup/system_XMC1300.c ****   while((SCU_CLK->CLKCR & SCU_CLK_CLKCR_VDDC2LOW_Msk));
 121              	 .loc 1 109 0
 122 000c 064A     	 ldr r2,.L12+4
 123 000e 074B     	 ldr r3,.L12+8
 124 0010 1360     	 str r3,[r2]
 125              	.L10:
 110:../Startup/system_XMC1300.c ****   SCU_GENERAL->PASSWD = 0x000000C3UL; /* enable bit protection */
 126              	 .loc 1 110 0 discriminator 1
 127 0012 1368     	 ldr r3,[r2]
 128 0014 0B42     	 tst r3,r1
 129 0016 FCD1     	 bne .L10
 111:../Startup/system_XMC1300.c **** 
 130              	 .loc 1 111 0
 131 0018 C322     	 mov r2,#195
 132 001a 024B     	 ldr r3,.L12
 114:../Startup/system_XMC1300.c **** 
 133              	 .loc 1 114 0
 134              	 
 111:../Startup/system_XMC1300.c **** 
 135              	 .loc 1 111 0
 136 001c 5A62     	 str r2,[r3,#36]
 113:../Startup/system_XMC1300.c **** }
 137              	 .loc 1 113 0
 138 001e FFF7FEFF 	 bl SystemCoreClockUpdate
 139              	.LVL1:
 114:../Startup/system_XMC1300.c **** 
 140              	 .loc 1 114 0
 141 0022 08BD     	 pop {r3,pc}
 142              	.L13:
 143              	 .align 2
 144              	.L12:
 145 0024 00000140 	 .word 1073807360
 146 0028 00030140 	 .word 1073808128
 147 002c 0001F13F 	 .word 1072759040
 148              	 .cfi_endproc
 149              	.LFE36:
 151              	 .section .text.SystemInit,"ax",%progbits
 152              	 .align 2
 153              	 .weak SystemInit
 154              	 .code 16
 155              	 .thumb_func
 157              	SystemInit:
 158              	.LFB34:
  94:../Startup/system_XMC1300.c ****   SystemCoreSetup();
 159              	 .loc 1 94 0
 160              	 .cfi_startproc
 161 0000 08B5     	 push {r3,lr}
 162              	 .cfi_def_cfa_offset 8
 163              	 .cfi_offset 3,-8
 164              	 .cfi_offset 14,-4
  95:../Startup/system_XMC1300.c ****   SystemCoreClockSetup();
 165              	 .loc 1 95 0
 166 0002 FFF7FEFF 	 bl SystemCoreSetup
 167              	.LVL2:
  97:../Startup/system_XMC1300.c **** 
 168              	 .loc 1 97 0
 169              	 
  96:../Startup/system_XMC1300.c **** }
 170              	 .loc 1 96 0
 171 0006 FFF7FEFF 	 bl SystemCoreClockSetup
 172              	.LVL3:
  97:../Startup/system_XMC1300.c **** 
 173              	 .loc 1 97 0
 174 000a 08BD     	 pop {r3,pc}
 175              	 .cfi_endproc
 176              	.LFE34:
 178              	 .global SystemCoreClock
 179              	 .section .bss.IDIV.4926,"aw",%nobits
 180              	 .align 2
 181              	 .set .LANCHOR0,.+0
 184              	IDIV.4926:
 185 0000 00000000 	 .space 4
 186              	 .section .no_init,"aw",%progbits
 187              	 .align 2
 188              	 .set .LANCHOR2,.+0
 191              	SystemCoreClock:
 192 0000 00000000 	 .space 4
 193              	 .section .bss.FDIV.4927,"aw",%nobits
 194              	 .align 2
 195              	 .set .LANCHOR1,.+0
 198              	FDIV.4927:
 199 0000 00000000 	 .space 4
 200              	 .text
 201              	.Letext0:
 202              	 .file 2 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 203              	 .file 3 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 204              	 .file 4 "C:/Users/choeoliv/Desktop/IFKOR FOC DRIVE/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_XMC1300.c
    {standard input}:18     .text.SystemCoreSetup:00000000 $t
    {standard input}:23     .text.SystemCoreSetup:00000000 SystemCoreSetup
    {standard input}:36     .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:41     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:87     .text.SystemCoreClockUpdate:00000034 $d
    {standard input}:97     .text.SystemCoreClockSetup:00000000 $t
    {standard input}:102    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
    {standard input}:145    .text.SystemCoreClockSetup:00000024 $d
    {standard input}:152    .text.SystemInit:00000000 $t
    {standard input}:157    .text.SystemInit:00000000 SystemInit
    {standard input}:191    .no_init:00000000 SystemCoreClock
    {standard input}:180    .bss.IDIV.4926:00000000 $d
    {standard input}:184    .bss.IDIV.4926:00000000 IDIV.4926
    {standard input}:187    .no_init:00000000 $d
    {standard input}:194    .bss.FDIV.4927:00000000 $d
    {standard input}:198    .bss.FDIV.4927:00000000 FDIV.4927
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
